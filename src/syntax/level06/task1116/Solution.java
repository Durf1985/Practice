package syntax.level06.task1116;

/*
Минимальное число статиков
Расставьте минимальное количество static-ов, чтобы код начал работать, и программа успешно завершилась.

Требования:
•	Реализацию и модификаторы доступа методов менять нельзя.
•	Добавь модификаторы static в нужные места.
•	В программе должно быть только 4 модификатора static.
•	Программа должна выводить текст на экран.
*/

public class Solution {
    public int step;

    public static void main(String[] args) {
        method1();
    }

    public static void method1() {
        method2();
    }

    public static void method2() {
        new Solution().method3();
        // способ обратиться к не статическому методу из статического - создать экземпляр не статического класса
        // в статическом методе ничто не мешает, следовательно, можно из статического метода через этот экземпляр
        // вызвать метод не статический метод. Собстно я каждый раз делал это в методе main, а допер только щас.
    }

    public void method3() {
        method4();
    }

    public void method4() {
        step++;
        for (StackTraceElement element : Thread.currentThread().getStackTrace())
            System.out.println(element);
        // стэк строится в обратном порядке, с при этом нулевой элемент это сам метод массива, а тот в котором он вызван
        // под индексом 1 максимальный индекс это количество переходов до метода main.
        if (step > 1)
            return;
        main(null);
    }
}
